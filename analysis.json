{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`flow-bind`\n\nCustom element to allow using Polymer's template features (Flowbased Polymer,  data binding,\ndeclarative event listeners, etc.) in the main document without defining\na new custom element.\n\n`<template>` tags utilizing bindings may be wrapped with the `<flow-bind>`\nelement, which will immediately stamp the wrapped template into the main\ndocument, attach the declarative @-events, Æ’-functions and bind elements to the `flow-bind` element itself as the\nbinding scope.",
      "summary": "Custom element to allow using Flowbased-Polymer's template features (data\n  binding, declarative event listeners, etc.) in the main document.",
      "path": "flow-bind.html",
      "properties": [],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 8
            },
            "end": {
              "line": 28,
              "column": 9
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/flow-bind.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FlowBind",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "flow-bind",
      "mixins": [
        "FBPMixin"
      ]
    },
    {
      "description": "Sometimes you want to see the current values of a property or check if an @-event is triggered or what kind of data comes with the event.\n\nProperties are displayed inline, event data will be logged to the console.",
      "summary": "",
      "path": "inspect-flow.html",
      "properties": [
        {
          "name": "_PolymerFlowBasedProgrammingEvents",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "behaviour.html",
            "start": {
              "line": 26,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.FlowBasedProgramming"
        },
        {
          "name": "property",
          "type": "Object",
          "description": "The property you want to inspect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 16
            },
            "end": {
              "line": 43,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_jsonString",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 16
            },
            "end": {
              "line": 46,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "behaviour.html",
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.FlowBasedProgramming"
        },
        {
          "name": "_getElementPath",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "behaviour.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "inheritedFrom": "Polymer.FlowBasedProgramming"
        },
        {
          "name": "_prettyJson",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 51,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "event",
          "description": "The event you want to trace,\nlogs event data to console",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 12
            },
            "end": {
              "line": 60,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "description": "Payload which comes with the event. **event.detail**"
            }
          ]
        },
        {
          "name": "log",
          "description": "The event you want to trace,\nlogs event data to console",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 12
            },
            "end": {
              "line": 69,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "description": "Payload which comes with the event. **event.detail**"
            }
          ]
        },
        {
          "name": "dir",
          "description": "The event you want to trace,\nlogs event data to console",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 12
            },
            "end": {
              "line": 78,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "description": "Payload which comes with the event. **event.detail**"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 16
        },
        "end": {
          "line": 83,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "property",
          "description": "The property you want to inspect",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 16
            },
            "end": {
              "line": 43,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "inspect-flow"
    }
  ],
  "mixins": [
    {
      "description": "",
      "summary": "",
      "path": "mixin.html",
      "properties": [],
      "methods": [
        {
          "name": "_attachDom",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 12
            },
            "end": {
              "line": 21,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ]
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 12
            },
            "end": {
              "line": 52,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ]
        },
        {
          "name": "_appendFBP",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 12
            },
            "end": {
              "line": 200,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ]
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 12
            },
            "end": {
              "line": 208,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 6,
          "column": 4
        },
        "end": {
          "line": 211,
          "column": 5
        }
      },
      "privacy": "public",
      "name": "FBPMixin",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "",
          "summary": "",
          "path": "behaviour.html",
          "properties": [
            {
              "name": "_PolymerFlowBasedProgrammingEvents",
              "type": "Array",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 26,
                  "column": 6
                },
                "end": {
                  "line": 31,
                  "column": 7
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 33,
                  "column": 4
                },
                "end": {
                  "line": 212,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 214,
                  "column": 4
                },
                "end": {
                  "line": 220,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_getElementPath",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 222,
                  "column": 4
                },
                "end": {
                  "line": 230,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "el"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 233,
              "column": 3
            }
          },
          "privacy": "public",
          "name": "Polymer.FlowBasedProgramming",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
